/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Views;

import Model.HoaDon;
import Model.HoaDonChiTiet;
import Model.KhachHang;
import Model.KichThuoc;
import Model.MauSac;
import Model.SPCT;
import Model.Voucher;
import Service.BanHangService;
import Service.HoaDonChiTietService;
import Service.KichThuocService;
import Service.MauSacService;
import Service.QuanLyKhachHangService;
import Service.QuanLyVoucherService;
import Service.SPCTService;
import Service.ServiceLoGin;

import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @author Admin
 */
public class ViewBanHang extends javax.swing.JPanel {

    BanHangService banHangService = new BanHangService();
    DefaultTableModel mol = new DefaultTableModel();
    ServiceLoGin serviceLoGin = new ServiceLoGin();
    QuanLyKhachHangService khachHangService = new QuanLyKhachHangService();
    private String fullName;
    private int id;
    HoaDonChiTietService hoaDonChiTietService = new HoaDonChiTietService();
    private int ChonHoaDon;
    SPCTService spcts = new SPCTService();
    QuanLyVoucherService quanLyVoucherService = new QuanLyVoucherService();
    private boolean isInitializing = true;
    MauSacService mss = new MauSacService();
    KichThuocService kts = new KichThuocService();

    /**
     * Creates new form ViewBanHang
     */
    public ViewBanHang(String fullName, int id) {
        initComponents();
        this.fullName = fullName;
        this.fillTable();
        lblnhanvien.setText(this.fullName);
        this.id = id;
        this.findComboboxVoucher();
        txttongtien.setEditable(false);
        txttienthua.setEditable(false);
        txtthanhtoan.setEditable(false);
        txtTenKhachHang.setEditable(false);
        this.fillTableSPCT(spcts.getAllSanPhamCTbanhang());
        this.findComboboxTKMau();
        this.findComboboxTKSize();
        isInitializing = false;
    }

    private void ShowName(KhachHang k) {
        txtTenKhachHang.setText(k.getTen());
    }

    private void findComboboxTKMau() {
        DefaultComboBoxModel boxModel = (DefaultComboBoxModel) cbbTKMau.getModel();
        boxModel.removeAllElements();
        for (MauSac m : mss.getALLMauSac()) {
            boxModel.addElement(m.getTenMauSac());
        }
    }

    private void findComboboxTKSize() {
        DefaultComboBoxModel boxModel = (DefaultComboBoxModel) cbbTKSize.getModel();
        boxModel.removeAllElements();
        for (KichThuoc k : kts.getALLKichThuoc()) {
            boxModel.addElement(k.getTenKichThuoc());
        }
    }

    private void fillTableSPCT(ArrayList<SPCT> allSanPhamCTbanhang) {
        mol = (DefaultTableModel) tblspct.getModel();
        mol.setRowCount(0);
        for (SPCT spct : allSanPhamCTbanhang) {
            mol.addRow(spct.toDataRowBanHang());
        }
    }

    private void findComboboxVoucher() {
        DefaultComboBoxModel boxModel = (DefaultComboBoxModel) cbbvoucher.getModel();
        boxModel.removeAllElements();

        List<Voucher> bs = quanLyVoucherService.getTenVoucher();
        for (Voucher voucher : bs) {
            boxModel.addElement(voucher.getTenVocher());
        }
    }

    private boolean validateSDT(ArrayList<KhachHang> SearchKhachHang) {
        int i = 0;
        for (KhachHang k : SearchKhachHang) {
            i++;
        }
        if (i > 1) {
            return true;
        } else {
            return false;
        }
    }

    private void fillTableHDCT(int idHoaDon) {
        List<HoaDonChiTiet> list = hoaDonChiTietService.getAllHoaDonChiTiet(idHoaDon);
        DefaultTableModel modelHDCT = (DefaultTableModel) tblhoadonchitiet.getModel();
        modelHDCT.setRowCount(0);
        for (HoaDonChiTiet hdct : list) {
            modelHDCT.addRow(hdct.toDataRow());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel14 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblhoadon = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblhoadonchitiet = new javax.swing.JTable();
        btnxoa = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        txtTenKhachHang = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        lblLoiSDT = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cbbvoucher = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        btnthanhtoan = new javax.swing.JButton();
        btnlammoi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtthanhtoan = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txttongtien = new javax.swing.JTextField();
        btntaohoadon = new javax.swing.JButton();
        btnhuyhoadon = new javax.swing.JButton();
        lblnhanvien = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txttienkhachdua = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txttienthua = new javax.swing.JTextField();
        lblloitienthua = new javax.swing.JLabel();
        lblthongbaovoucher = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblspct = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        cbbTKMau = new javax.swing.JComboBox<>();
        cbbTKSize = new javax.swing.JComboBox<>();
        btnLamMoiSPCT = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel14.setBackground(new java.awt.Color(255, 255, 204));

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblhoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã hóa đơn", "Nhân viên", "Khách hàng", "Ngày tạo", "Trạng thái"
            }
        ));
        tblhoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblhoadonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblhoadon);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(653, 653, 653)
                        .addComponent(jLabel1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Giỏ hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblhoadonchitiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Hóa Đơn", "Mã SPCT", "Tên sản phẩm", "Số Lượng", "Giá Bán", "Thành Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblhoadonchitiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblhoadonchitietMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblhoadonchitiet);

        btnxoa.setBackground(new java.awt.Color(0, 102, 102));
        btnxoa.setForeground(new java.awt.Color(255, 255, 255));
        btnxoa.setText("Xóa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnxoa)
                        .addGap(0, 3, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnxoa)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thanh Toán", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel26.setText("Tên KH:");

        txtTenKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenKhachHangActionPerformed(evt);
            }
        });

        jLabel27.setText("SDT:");

        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });
        txtSDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSDTKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSDTKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSDT)
                    .addComponent(txtTenKhachHang)
                    .addComponent(lblLoiSDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txtTenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLoiSDT)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        jLabel13.setText("Tổng tiền:");

        cbbvoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbvoucherActionPerformed(evt);
            }
        });

        jLabel16.setText("Thanh toán:");

        btnthanhtoan.setBackground(new java.awt.Color(0, 102, 102));
        btnthanhtoan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnthanhtoan.setForeground(new java.awt.Color(255, 255, 255));
        btnthanhtoan.setText("Thanh toán");
        btnthanhtoan.setBorder(null);
        btnthanhtoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthanhtoanActionPerformed(evt);
            }
        });

        btnlammoi.setBackground(new java.awt.Color(0, 102, 102));
        btnlammoi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnlammoi.setForeground(new java.awt.Color(255, 255, 255));
        btnlammoi.setText("Làm mới");
        btnlammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlammoiActionPerformed(evt);
            }
        });

        jLabel4.setText("Voucher:");

        txtthanhtoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtthanhtoanActionPerformed(evt);
            }
        });

        jLabel7.setText("Nhân Viên:");

        txttongtien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttongtienActionPerformed(evt);
            }
        });

        btntaohoadon.setBackground(new java.awt.Color(0, 102, 102));
        btntaohoadon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btntaohoadon.setForeground(new java.awt.Color(255, 255, 255));
        btntaohoadon.setText("Tạo hóa đơn");
        btntaohoadon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntaohoadonActionPerformed(evt);
            }
        });

        btnhuyhoadon.setBackground(new java.awt.Color(0, 102, 102));
        btnhuyhoadon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnhuyhoadon.setForeground(new java.awt.Color(255, 255, 255));
        btnhuyhoadon.setText("Hủy hóa đơn");
        btnhuyhoadon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhuyhoadonActionPerformed(evt);
            }
        });

        jLabel5.setText("Tiền Khách Đưa:");

        txttienkhachdua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttienkhachduaActionPerformed(evt);
            }
        });
        txttienkhachdua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txttienkhachduaKeyReleased(evt);
            }
        });

        jLabel6.setText("Tiền Thừa:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(btntaohoadon)
                                .addGap(96, 96, 96))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(btnlammoi, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(btnhuyhoadon)
                                .addContainerGap())))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnthanhtoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(txtthanhtoan))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txttienkhachdua))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txttienthua, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblnhanvien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbbvoucher, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txttongtien)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(lblthongbaovoucher, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblloitienthua, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel7))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lblnhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txttongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbbvoucher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(lblthongbaovoucher)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtthanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txttienkhachdua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txttienthua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblloitienthua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnlammoi)
                    .addComponent(btnhuyhoadon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btntaohoadon)
                .addGap(18, 18, 18)
                .addComponent(btnthanhtoan, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 204));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblspct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã SPCT", "Sản Phẩm", "Màu Sắc", "Kích Thước", "Đế Giày", "Khuyến Mãi", "Số Lượng", "Đơn Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblspct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblspctMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblspct);

        jLabel20.setText("Tìm kiếm:");

        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel21.setText("Bộ lọc:");

        cbbTKMau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbTKMauMouseClicked(evt);
            }
        });
        cbbTKMau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTKMauActionPerformed(evt);
            }
        });

        cbbTKSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTKSizeActionPerformed(evt);
            }
        });

        btnLamMoiSPCT.setBackground(new java.awt.Color(0, 102, 102));
        btnLamMoiSPCT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLamMoiSPCT.setForeground(new java.awt.Color(255, 255, 255));
        btnLamMoiSPCT.setText("Làm Mới");
        btnLamMoiSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiSPCTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLamMoiSPCT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(cbbTKMau, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(cbbTKSize, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbTKSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbTKMau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(btnLamMoiSPCT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(199, 199, 199))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 213, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbbTKSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTKSizeActionPerformed
        // TODO add your handling code here:
        String ChonKichThuoc = cbbTKSize.getSelectedItem() != null ? cbbTKSize.getSelectedItem().toString() : "";
        if (isInitializing) {
            return;
        }
        if (ChonKichThuoc.equals("Chọn voucher") || ChonKichThuoc.isEmpty()) {
            return;
        }
        fillTableSPCT(spcts.getAllSanPhamCTByTenKichThuoc(ChonKichThuoc));
    }//GEN-LAST:event_cbbTKSizeActionPerformed

    private void cbbTKMauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTKMauActionPerformed
        // TODO add your handling ode here:
        String ChonMauSac = cbbTKMau.getSelectedItem() != null ? cbbTKMau.getSelectedItem().toString() : "";
        if (isInitializing) {
            return;
        }
        if (ChonMauSac.equals("Chọn voucher") || ChonMauSac.isEmpty()) {
            return;
        }

        fillTableSPCT(spcts.getAllSanPhamCTByTenMauSac(ChonMauSac));

    }//GEN-LAST:event_cbbTKMauActionPerformed

    private void btnthanhtoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthanhtoanActionPerformed
        if (ChonHoaDon == 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn để thanh toán!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            NumberFormat numberFormat = NumberFormat.getNumberInstance(new Locale("vi", "VN"));

            String TongTienStr = txttongtien.getText().trim();
            if (TongTienStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không có tổng tiền để thanh toán!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            double TongTien = numberFormat.parse(TongTienStr).doubleValue();

            String ThanhToanStr = txtthanhtoan.getText().trim();
            if (ThanhToanStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không có tổng tiền sau giảm giá để thanh toán!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            double ThanhToan = numberFormat.parse(ThanhToanStr).doubleValue();
            String tienKhachDuaStr = txttienkhachdua.getText().trim();
            if (tienKhachDuaStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập số tiền khách đưa!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            double tienKhachDua = numberFormat.parse(tienKhachDuaStr).doubleValue();
            if (tienKhachDua < ThanhToan) {
                JOptionPane.showMessageDialog(this, "Số tiền khách đưa không đủ để thanh toán!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }
            String ChonVoucherName = cbbvoucher.getSelectedItem() != null ? cbbvoucher.getSelectedItem().toString() : "";
            Integer voucherId = null;

            if (!ChonVoucherName.equals("chon") && !ChonVoucherName.isEmpty()) {
                Voucher voucher = quanLyVoucherService.getVoucherByName(ChonVoucherName);
                if (voucher != null) {
                    voucherId = voucher.getId();
                } else {
                    JOptionPane.showMessageDialog(this, "Voucher không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            int confirm = JOptionPane.showConfirmDialog(this, "Xác nhận thanh toán hóa đơn với số tiền thanh toán: " + numberFormat.format(ThanhToan) + "?", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }
            double tienThua = tienKhachDua - ThanhToan;
            boolean Updated = banHangService.updateInvoiceAfterPayment(ChonHoaDon, ThanhToan, TongTien, voucherId);
            if (Updated) {
                JOptionPane.showMessageDialog(this, "Thanh toán thành công! Tiền thừa: " + numberFormat.format(tienThua), "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                fillTable();
                ((DefaultTableModel) tblhoadonchitiet.getModel()).setRowCount(0);
                txttongtien.setText("");
                txtthanhtoan.setText("");
                txttienthua.setText("");
                txttienkhachdua.setText("");
                txtTenKhachHang.setText("");
                lblLoiSDT.setText("");
                lblloitienthua.setText("");
                lblthongbaovoucher.setText("");
                cbbvoucher.setSelectedIndex(0);
                ChonHoaDon = 0;
                txtSDT.setText("");
            } else {
                JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật hóa đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Lỗi định dạng số: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi phân tích số: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xử lý thanh toán: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnthanhtoanActionPerformed

    private void txtthanhtoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtthanhtoanActionPerformed

    }//GEN-LAST:event_txtthanhtoanActionPerformed

    private void cbbvoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbvoucherActionPerformed
        try {
            String ChonVoucher = cbbvoucher.getSelectedItem() != null ? cbbvoucher.getSelectedItem().toString() : "";
            if (isInitializing) {
                return;
            }
          
            TinhTongTien();
            NumberFormat numberFormat = NumberFormat.getNumberInstance(new Locale("vi", "VN"));
            numberFormat.setGroupingUsed(true);
            numberFormat.setMinimumFractionDigits(0);
            numberFormat.setMaximumFractionDigits(0);

            double TongTien = NumberFormat.getNumberInstance(new Locale("vi", "VN"))
                    .parse(txttongtien.getText()).doubleValue();
            Voucher voucher = quanLyVoucherService.getVoucherByName(ChonVoucher);
            if (voucher == null) {
                lblthongbaovoucher.setText("Voucher không hợp lệ!");
                txtthanhtoan.setText(numberFormat.format(TongTien));
                return;
            }
            if (TongTien < voucher.getDonToiThieu()) {
                lblthongbaovoucher.setText("Tổng tiền không đủ điều kiện áp dụng voucher này! "
                        + "Đơn tối thiểu: " + numberFormat.format(voucher.getDonToiThieu()));
                txtthanhtoan.setText(numberFormat.format(TongTien));
                return;
            }
             if (ChonVoucher.equals("Khong") || ChonVoucher.isEmpty()) {
                lblthongbaovoucher.setText("");
                txtthanhtoan.setText(numberFormat.format(TongTien));
                return;
            }
            double TienGiamGia = TongTien * voucher.getGiamGia() / 100;
            if (TienGiamGia > voucher.getGiamToiDa()) {
                TienGiamGia = voucher.getGiamToiDa();
                lblthongbaovoucher.setText("Giảm tối đa: " + numberFormat.format(voucher.getGiamToiDa()));
            } else {
                lblthongbaovoucher.setText("Số tiền giảm: " + numberFormat.format(TienGiamGia));
            }
            double ThanhToan = TongTien - TienGiamGia;
            txtthanhtoan.setText(numberFormat.format(ThanhToan));
        } catch (NumberFormatException e) {
            lblthongbaovoucher.setText("Lỗi định dạng số!");
        } catch (ParseException ex) {
            lblthongbaovoucher.setText("Lỗi xử lý định dạng dữ liệu!");
            Logger.getLogger(ViewBanHang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbbvoucherActionPerformed

    private void btnlammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlammoiActionPerformed
        txtTenKhachHang.setText("");
        txtSDT.setText("");
        txtthanhtoan.setText("");
        txttienkhachdua.setText("");
        txttongtien.setText("");
        cbbvoucher.setSelectedItem(true);
        txttienthua.setText("");
        lblLoiSDT.setText("");
        lblloitienthua.setText("");
        lblthongbaovoucher.setText("");
        cbbvoucher.setSelectedIndex(0);
    }//GEN-LAST:event_btnlammoiActionPerformed

    private void txttongtienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttongtienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttongtienActionPerformed
    private void TinhTongTien() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblhoadonchitiet.getModel();
            int SoDong = model.getRowCount();
            double TongTien = 0;
            for (int i = 0; i < SoDong; i++) {
                double thanhTien = Double.parseDouble(tblhoadonchitiet.getValueAt(i, 6).toString());
                TongTien += thanhTien;
            }
            NumberFormat numberFormat = NumberFormat.getNumberInstance(new Locale("vi", "VN"));
            numberFormat.setGroupingUsed(true);
            numberFormat.setMinimumFractionDigits(0);
            numberFormat.setMaximumFractionDigits(0);
            String TongTienStr = numberFormat.format(TongTien);
            txttongtien.setText(TongTienStr);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tính tổng tiền: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btntaohoadonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntaohoadonActionPerformed
        // TODO add your handling code here:
        try {
            HoaDon hoaDon = readForm();
            if (hoaDon == null) {
                return;
            }
            if (hoaDon.getTrangThai() != 0) {
                JOptionPane.showMessageDialog(this, "Trạng thái hóa đơn không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            txttongtien.setText("");
            banHangService.addHoaDon(hoaDon);
            fillTable();
            txtSDT.setText("");
            txtTenKhachHang.setText("");
            JOptionPane.showMessageDialog(this, "Hóa đơn đã được tạo thành công!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm hóa đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btntaohoadonActionPerformed

    private void txtTenKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenKhachHangActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtTenKhachHangActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed

    }//GEN-LAST:event_txtSDTActionPerformed

    private void txtSDTKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyTyped

    }//GEN-LAST:event_txtSDTKeyTyped

    private void tblhoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblhoadonMouseClicked
        int row = tblhoadon.getSelectedRow();
        if (row != -1) {
            try {
                int idHoaDon = Integer.parseInt(tblhoadon.getValueAt(row, 0).toString());
                String maHoaDon = tblhoadon.getValueAt(row, 1).toString();
                ChonHoaDon = idHoaDon;
                int idKhachHang = banHangService.getKhachHangIdByHoaDon(idHoaDon);
                KhachHang khachHang = khachHangService.getKhachHangById(idKhachHang);
                if (khachHang != null) {
                    txtTenKhachHang.setText(khachHang.getTen());
                    txtSDT.setText(khachHang.getSdt());
                } else {
                    txtTenKhachHang.setText("");
                    txtSDT.setText("");
                    JOptionPane.showMessageDialog(this, "Không tìm thấy thông tin khách hàng!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                }
                fillTableHDCT(ChonHoaDon);
                TinhTongTien();
                JOptionPane.showMessageDialog(this, "Bạn đã chọn mã hóa đơn: " + maHoaDon);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi xử lý hóa đơn: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một hóa đơn!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tblhoadonMouseClicked


    private void tblspctMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblspctMouseClicked
        if (evt.getClickCount() == 2) {
            int row = tblspct.getSelectedRow();
            if (row >= 0) {
                try {
                    int idSPCT = Integer.parseInt(tblspct.getValueAt(row, 0).toString());
                    String maSPCT = tblspct.getValueAt(row, 1).toString();
                    String tenSanPham = tblspct.getValueAt(row, 2).toString();
                    int soLuongHienCo = Integer.parseInt(tblspct.getValueAt(row, 7).toString());
                    float donGia = Float.parseFloat(tblspct.getValueAt(row, 8).toString());
                    float giamGia = Float.parseFloat(tblspct.getValueAt(row, 6).toString());
                    float giaBanSauKhuyenMai = donGia * (1 - giamGia / 100);
                    if (ChonHoaDon == 0) {
                        JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn trước khi thêm sản phẩm!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                    String input = JOptionPane.showInputDialog(this, "Nhập số lượng muốn thêm:");
                    if (input == null || input.trim().isEmpty()) {
                        return;
                    }
                    int soLuongThem = Integer.parseInt(input.trim());
                    if (soLuongThem <= 0) {
                        JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    if (soLuongThem > soLuongHienCo) {
                        JOptionPane.showMessageDialog(this, "Số lượng yêu cầu vượt quá số lượng hiện có!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    boolean Updated = spcts.addSPCTBanHang(ChonHoaDon, idSPCT, soLuongThem, giaBanSauKhuyenMai);
                    if (Updated) {
                        spcts.updateSoLuong(idSPCT, soLuongHienCo - soLuongThem);
                        fillTableSPCT(spcts.getAllSanPhamCTbanhang());
                        fillTableHDCT(ChonHoaDon);
                        TinhTongTien();
                        JOptionPane.showMessageDialog(this, "Sản phẩm đã được thêm vào giỏ hàng!");
                    } else {
                        JOptionPane.showMessageDialog(this, "Lỗi khi thêm sản phẩm vào giỏ hàng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Lỗi khi xử lý dữ liệu: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_tblspctMouseClicked

    private void tblhoadonchitietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblhoadonchitietMouseClicked
        if (evt.getClickCount() == 2) {
            int row = tblhoadonchitiet.getSelectedRow();
            if (row >= 0) {
                try {
                    int idSPCT = Integer.parseInt(tblhoadonchitiet.getValueAt(row, 0).toString());
                    String maSanPham = tblhoadonchitiet.getValueAt(row, 2).toString();
                    String tenSanPham = tblhoadonchitiet.getValueAt(row, 3).toString();
                    int soLuongHienCo = Integer.parseInt(tblhoadonchitiet.getValueAt(row, 4).toString());
                    Float donGia = Float.parseFloat(tblspct.getValueAt(row, 8).toString());
                    int giamGia = Integer.parseInt(tblspct.getValueAt(row, 6).toString());
                    int idhdct = Integer.parseInt(tblhoadonchitiet.getValueAt(row, 0).toString());
                    float giaBanSauKhuyenMai = donGia * (1 - giamGia / 100);
                    String input = JOptionPane.showInputDialog(this, "Nhập số lượng mới:");
                    if (input == null || input.trim().isEmpty()) {
                        return;
                    }
                    try {
                        int soLuongMoi = Integer.parseInt(input.trim());
                        SPCT spct = spcts.SearchMaSPCT(maSanPham);
                        HoaDonChiTiet hdct = hoaDonChiTietService.SearchHoaDonChiTiet(idhdct);
                        if (soLuongMoi <= 0) {
                            JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                        if (soLuongMoi > (spct.getSoLuong() + hdct.getSoLuong())) {
                            JOptionPane.showMessageDialog(this, "Số lượng yêu cầu vượt quá số lượng hiện có!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                        tblhoadonchitiet.setValueAt(soLuongMoi, row, 4);
                        float thanhTien = giaBanSauKhuyenMai * soLuongMoi;
                        tblhoadonchitiet.setValueAt(thanhTien, row, 6);
                        TinhTongTien();
                        spcts.updateSoLuong(spct.getId(), (spct.getSoLuong() + soLuongHienCo) - soLuongMoi);
                        hoaDonChiTietService.updateSoLuong(ChonHoaDon, spct.getId(), soLuongMoi, thanhTien);
                        fillTableSPCT(spcts.getAllSanPhamCTbanhang());
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Lỗi khi xử lý dữ liệu: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một sản phẩm trong chi tiết hóa đơn!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_tblhoadonchitietMouseClicked

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        // TODO add your handling code here:
        int row = tblhoadonchitiet.getSelectedRow();
        if (row >= 0) {
            try {
                int idHoaDonChiTiet = Integer.parseInt(tblhoadonchitiet.getValueAt(row, 0).toString());
                String maSPCT = (tblhoadonchitiet.getValueAt(row, 2).toString());
                int soLuongXoa = Integer.parseInt(tblhoadonchitiet.getValueAt(row, 4).toString());
                SPCT spct = spcts.SearchMaSPCT(maSPCT);
                int soLuongHienTai = spct.getSoLuong();
                spcts.updateSoLuong(spct.getId(), soLuongHienTai + soLuongXoa);
                DefaultTableModel modelHDCT = (DefaultTableModel) tblhoadonchitiet.getModel();
                modelHDCT.removeRow(row);
                hoaDonChiTietService.delete(idHoaDonChiTiet);
                TinhTongTien();
                fillTableSPCT(spcts.getAllSanPhamCTbanhang());
                txtthanhtoan.setText("");
                txttienkhachdua.setText("");
                lblthongbaovoucher.setText("");
                txttienthua.setText("");
                cbbvoucher.setSelectedIndex(0);
                JOptionPane.showMessageDialog(this, "Sản phẩm đã được xóa khỏi giỏ hàng!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Lỗi khi xóa sản phẩm: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm để xóa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnxoaActionPerformed

    private void txttienkhachduaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttienkhachduaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttienkhachduaActionPerformed

    private void txttienkhachduaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttienkhachduaKeyReleased
        try {
            NumberFormat numberFormat = NumberFormat.getNumberInstance(new Locale("vi", "VN"));
            numberFormat.setGroupingUsed(true);
            numberFormat.setMinimumFractionDigits(0);
            numberFormat.setMaximumFractionDigits(2);
            String tienKhachDuaText = txttienkhachdua.getText().replace(".", "").replace(",", ".").trim();
            if (tienKhachDuaText.isEmpty()) {
                txttienthua.setText("0");
                lblloitienthua.setText(""); // Không có lỗi
                return;
            }
            double tienKhachDua = Double.parseDouble(tienKhachDuaText);
            String tienThanhToanStr = txtthanhtoan.getText().replace(".", "").replace(",", ".").trim();
            if (tienThanhToanStr.isEmpty()) {
                txttienthua.setText("0");
                lblloitienthua.setText("");
                return;
            }
            double tienThanhToan = Double.parseDouble(tienThanhToanStr);
            double tienThua = tienKhachDua - tienThanhToan;
            if (tienThua < 0) {
                txttienthua.setText("0");
                lblloitienthua.setText("Tiền khách đưa không đủ!");
                lblloitienthua.setForeground(Color.RED);
            } else {
                String tienThuaStr = numberFormat.format(tienThua);
                txttienthua.setText(tienThuaStr);
                lblloitienthua.setText("");
            }
            String tienKhachDuaStr = numberFormat.format(tienKhachDua);
            txttienkhachdua.setText(tienKhachDuaStr);
        } catch (NumberFormatException e) {
            txttienthua.setText("0");
            lblloitienthua.setText("Nhập không hợp lệ!");
            lblloitienthua.setForeground(Color.RED);
        }
    }//GEN-LAST:event_txttienkhachduaKeyReleased

    private void btnhuyhoadonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhuyhoadonActionPerformed

        if (ChonHoaDon == 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn để hủy!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this,
                "Bạn có chắc chắn muốn hủy hóa đơn này?",
                "Xác nhận",
                JOptionPane.YES_NO_OPTION);

        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }
        try {
            String TongTienStr = txttongtien.getText().trim();
            double TongTien = 0.0;
            if (!TongTienStr.isEmpty()) {
                TongTienStr = TongTienStr.replace(".", "").replace(",", ".");
                TongTien = Double.parseDouble(TongTienStr);
            }
            String ThanhToanStr = txtthanhtoan.getText().trim();
            double tongTienSauVoucher = 0.0; 
            if (!ThanhToanStr.isEmpty()) {
                ThanhToanStr = ThanhToanStr.replace(".", "").replace(",", ".");
                tongTienSauVoucher = Double.parseDouble(ThanhToanStr);
            }
            List<HoaDonChiTiet> hdctList = hoaDonChiTietService.getAllHoaDonChiTiet(ChonHoaDon);
            String ChonVoucherName = cbbvoucher.getSelectedItem() != null ? cbbvoucher.getSelectedItem().toString() : "";
            Integer voucherId = null;
            if (!ChonVoucherName.equals("chon") && !ChonVoucherName.isEmpty()) {
                Voucher voucher = quanLyVoucherService.getVoucherByName(ChonVoucherName);
                if (voucher != null) {
                    voucherId = voucher.getId();
                } else {
                    JOptionPane.showMessageDialog(this, "Voucher không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            for (HoaDonChiTiet hdct : hdctList) {
                String maSPCT = hdct.getMaSPCT();
                int soLuongHoanTra = hdct.getSoLuong();
                SPCT spct = spcts.getSPCTById(maSPCT);
                if (spct != null) {
                    int updatedSoLuong = spct.getSoLuong() + soLuongHoanTra;
                    spcts.updateSoLuong(spct.getId(), updatedSoLuong);
                }
            }
            boolean Canceled = banHangService.HuyHoaDon(
                    ChonHoaDon,
                    TongTien,
                    tongTienSauVoucher,
                    voucherId
            );
            if (!Canceled) {
                JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật trạng thái hóa đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            fillTable();
            fillTableSPCT(spcts.getAllSanPhamCTbanhang());
            ((DefaultTableModel) tblhoadonchitiet.getModel()).setRowCount(0);
            txttongtien.setText("");
            txtSDT.setText("");
            txtthanhtoan.setText("");
            txttienthua.setText("");
            txttienkhachdua.setText("");
            txtTenKhachHang.setText("");
            lblLoiSDT.setText("");
            lblloitienthua.setText("");
            lblthongbaovoucher.setText("");
            cbbvoucher.setSelectedIndex(0);
            JOptionPane.showMessageDialog(this, "Hủy hóa đơn thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            ChonHoaDon = 0;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Lỗi định dạng số: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xử lý hủy hóa đơn: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnhuyhoadonActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        String timKiem = txtTimKiem.getText();
        if (timKiem != null) {
            fillTableSPCT(spcts.getAllSanPhamCTByTen(timKiem));
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnLamMoiSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiSPCTActionPerformed
        // TODO add your handling code here:
        fillTableSPCT(spcts.getAllSanPhamCTbanhang());
    }//GEN-LAST:event_btnLamMoiSPCTActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void cbbTKMauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbTKMauMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbTKMauMouseClicked

    private void txtSDTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKeyReleased
        // TODO add your handling code here:
        String sdt = txtSDT.getText().trim();
        int size = sdt.length();
        if (size == 0) {
            lblLoiSDT.setText("");
        } else if (!sdt.matches("\\d+")) {
            lblLoiSDT.setText("Số điện thoại chỉ chứa ký tự số.");
        } else if (size > 10) {
            lblLoiSDT.setText("Số điện thoại vượt quá 10 ký tự.");
        } else if (size < 10) {
            lblLoiSDT.setText("Số điện thoại phải đủ 10 ký tự.");
        } else {
            lblLoiSDT.setText("");
            BanHangService banHangService = new BanHangService();
            KhachHang khachHang = banHangService.SearchKhachHang(sdt);
            if (khachHang == null) {
                JOptionPane.showMessageDialog(this, "Số điện thoại không tồn tại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            } else if (khachHang.getTrangThai() == 0) {
                JOptionPane.showMessageDialog(this, "Khách hàng này không còn hoạt động.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            } else {
                ShowName(khachHang);
                lblLoiSDT.setText("");
            }
        }
    }//GEN-LAST:event_txtSDTKeyReleased

    private void fillTable() {
        List<HoaDon> list = banHangService.getAllHoaDon();
        mol = (DefaultTableModel) tblhoadon.getModel();
        mol.setRowCount(0);
        for (HoaDon hoaDon : list) {
            mol.addRow(hoaDon.toDataRow());
        }
    }

    private HoaDon readForm() {
        String tenKhachHang = txtSDT.getText();
        int idKhachHang;
        if (tenKhachHang.isEmpty()) {
            idKhachHang = 1;
            System.out.println("Số điện thoại trống, sử dụng ID mặc định: " + idKhachHang);
        } else {
            KhachHang kh = banHangService.SearchKhachHang(tenKhachHang);
            if (kh != null) {
                idKhachHang = kh.getId();
            } else {
                idKhachHang = 1;
                System.out.println("Khách hàng không tìm thấy, sử dụng ID mặc định: " + idKhachHang);
            }
        }
        System.out.println(idKhachHang);
        int idNhanVien = id;
        System.out.println(idNhanVien);
        String tenNhanVien = lblnhanvien.getText();
        LocalDateTime ldt = LocalDateTime.now();
        java.sql.Timestamp ngayTao = java.sql.Timestamp.valueOf(ldt);
        String maHoaDon = banHangService.TaoMaHoaDon();
        int trangThai = 0;
        return new HoaDon(
                maHoaDon,
                idNhanVien,
                idKhachHang,
                ngayTao,
                trangThai
        );
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoiSPCT;
    private javax.swing.JButton btnhuyhoadon;
    private javax.swing.JButton btnlammoi;
    private javax.swing.JButton btntaohoadon;
    private javax.swing.JButton btnthanhtoan;
    private javax.swing.JButton btnxoa;
    private javax.swing.JComboBox<String> cbbTKMau;
    private javax.swing.JComboBox<String> cbbTKSize;
    private javax.swing.JComboBox<String> cbbvoucher;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblLoiSDT;
    private javax.swing.JLabel lblloitienthua;
    private javax.swing.JLabel lblnhanvien;
    private javax.swing.JLabel lblthongbaovoucher;
    private javax.swing.JTable tblhoadon;
    private javax.swing.JTable tblhoadonchitiet;
    private javax.swing.JTable tblspct;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenKhachHang;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtthanhtoan;
    private javax.swing.JTextField txttienkhachdua;
    private javax.swing.JTextField txttienthua;
    private javax.swing.JTextField txttongtien;
    // End of variables declaration//GEN-END:variables
}
